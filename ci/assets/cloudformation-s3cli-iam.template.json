{
  "Parameters" : {
    "AmazonMachineImageID" : {
      "Description" : "ID of Amazon Machine Image to use for the IAM Instance Profile Instance",
      "Type" : "String",
      "Default" : "ami-60b6c60a",
      "MinLength": "12",
      "MaxLength": "12",
      "AllowedPattern" : "ami-[a-fA-F0-9]*",
      "ConstraintDescription" : "can only be valid Amazon Machine Image Id's"
    },
    "KeyPairName" : {
      "Description" : "Name of an existing EC2 KeyPair",
      "Type" : "String",
      "Default" : "s3cli-key",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    }
  },
  "Mappings": {
    "Lookups": {
      "IPConfigurations": {
        "CIDR": "10.0.0.0/24"
      }
    },
    "RegionSettings": {
      "us-east-1": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3.amazonaws.com"
      },
      "us-west-1": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-us-west-2.amazonaws.com"
      },
      "eu-west-1": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-eu-west-1.amazonaws.com"
      },
      "ap-southeast-1": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-ap-southeast-1.amazonaws.com"
      },
      "ap-northeast-1": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-ap-northeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-ap-southeast-2.amazonaws.com"
      },
      "sa-east-1": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-sa-east-1.amazonaws.com"
      },
      "cn-north-1": {
        "EC2Endpoint": "ec2.amazonaws.com.cn",
        "AWSNamespace": "aws-cn",
        "S3Endpoint": "s3.cn-north-1.amazonaws.com.cn"
      },
      "eu-central-1": {
        "EC2Endpoint": "ec2.amazonaws.com",
        "AWSNamespace": "aws",
        "S3Endpoint": "s3-eu-central-1.amazonaws.com"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap": ["Lookups", "IPConfigurations", "CIDR"] },
        "Tags": [
          {
            "Key": "Name",
            "Value": "s3cli-vpc"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "s3cli-gateway"
          }
        ]
      }
    },
    "AttachGateway": {
      "DependsOn": [
        "VPC",
        "InternetGateway"
      ],
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "Subnet": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap": ["Lookups", "IPConfigurations", "CIDR"] },
        "Tags": [
          {
            "Key": "Name",
            "Value": "s3cli-subnet"
          }
        ]
      }
    },
    "SecurityGroup": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": "allows local and concourse traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "s3cli-security-group"
          }
        ]
      }
    },
    "EC2Instance": {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "ImageId" : { "Ref" : "AmazonMachineImageID" },
        "IamInstanceProfile": { "Ref" : "InstanceProfile" },
        "SecurityGroupIds" : [ { "Ref": "SecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyPairName" },
        "SubnetId" : { "Ref": "Subnet"},
        "Tags": [
          {
            "Key": "Name",
            "Value": "s3cli-iam-instance-profile"
          }
        ]
      }
    },
    "IPAddress": {
      "DependsOn": [
        "AttachGateway"
      ],
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId" : { "Ref": "EC2Instance" }
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "Private"
      }
    },
    "Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": { "Fn::FindInMap": [ "RegionSettings", { "Ref": "AWS::Region" }, "EC2Endpoint" ] }
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "S3CLIPermissions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject*",
                    "s3:PutObject*",
                    "s3:List*",
                    "s3:DeleteObject*"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          { "Fn::FindInMap": [ "RegionSettings", { "Ref": "AWS::Region" }, "AWSNamespace" ] },
                          ":s3:::",
                          { "Ref": "S3Bucket" }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          { "Fn::FindInMap": [ "RegionSettings", { "Ref": "AWS::Region" }, "AWSNamespace" ] },
                          ":s3:::",
                          { "Ref": "S3Bucket" },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "Role"} ]
      }
    },

    "RouteTable": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },
    "Route": {
      "DependsOn": [
        "RouteTable",
        "AttachGateway"
      ],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "NetworkAcl": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },
    "InBoundAllTrafficAclEntry": {
      "DependsOn": [ "NetworkAcl" ],
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NetworkAcl" },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "OutBoundAllTrafficAclEntry": {
      "DependsOn": [ "NetworkAcl" ],
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NetworkAcl" },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "SubnetRouteTableAssociation": {
      "DependsOn": [
        "Subnet",
        "RouteTable"
      ],
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Subnet" },
        "RouteTableId": { "Ref": "RouteTable" }
      }
    },
    "SubnetNetworkAclAssociation": {
      "DependsOn": [
        "Subnet",
        "NetworkAcl"
      ],
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Subnet" },
        "NetworkAclId": { "Ref": "NetworkAcl" }
      }
    }
  },
  "Outputs": {
    "TestHostIP": { "Value": { "Ref": "IPAddress" }},
    "BucketName": { "Value": { "Ref": "S3Bucket" }},
    "S3EndpointHost": {
      "Value": { "Fn::FindInMap": [ "RegionSettings", { "Ref": "AWS::Region"}, "S3Endpoint" ] }
    }
  }
}
